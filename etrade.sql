Using flat table 
-- 1. Total amount of sales per city

SELECT * FROM SALEORDERS
SELECT 
	CITY,
	CONCAT(SUM(LINETOTAL), ' TL') AS TOTAL_SALES
FROM SALEORDERS
GROUP BY CITY

--  2. Total amount of sales as per city and month, weekday

-- 1st option
SELECT 
	CITY, 
	DATEPART(MONTH,ORDERDATE) AS MONTH_,
	CONCAT(ROUND(SUM(LINETOTAL), 2), ' TL') AS TOTAL_SALES
FROM SALEORDERS
GROUP BY CITY, DATEPART(MONTH,ORDERDATE)
ORDER BY CITY, MONTH_
-- 2nd option
SELECT 
	CITY, 
	MONTH_,
	CONCAT(ROUND(SUM(LINETOTAL), 2), ' TL') AS TOTAL_SALES
FROM SALEORDERS
GROUP BY CITY, MONTH_
ORDER BY CITY, MONTH_

SELECT 
	CITY, 
	DAYOFWEEK_,
	CONCAT(SUM(LINETOTAL), ' TL') AS TOTAL_SALES
FROM SALEORDERS
GROUP BY CITY, DAYOFWEEK_
ORDER BY CITY, DAYOFWEEK_


-- 3. EACH CITY AND TOP 5 CATEGORY WITH HIGHEST SALES

SELECT 
	SALE1.CITY, 
	SALE2.CATEGORY1,
	SUM(SALE2.TOTAL_SALES) AS TOTAL_SALES
FROM SALEORDERS AS SALE1
	CROSS APPLY
		(SELECT TOP 5 CATEGORY1,SUM(LINETOTAL) AS TOTAL_SALES
		FROM SALEORDERS
		WHERE CITY = SALE1.CITY
		GROUP BY CATEGORY1
		ORDER BY 2 DESC) AS SALE2
GROUP BY SALE1.CITY, SALE2.CATEGORY1
ORDER BY SALE1.CITY, TOTAL_SALES DESC



--4. EACH CITY AND TOP 3 CATEGORY AND SUB-CATEGORY WITH HIGHEST SALES

SELECT 
	SALE1.CITY,
	SALE2.CATEGORY1,
	SALE3.CATEGORY2,
	SUM(SALE2.TOTAL_SALES) AS TOTAL_SALES
FROM SALEORDERS AS SALE1
CROSS APPLY (SELECT TOP 3 CATEGORY1,SUM(LINETOTAL) AS TOTAL_SALES
		FROM SALEORDERS
		WHERE CITY = SALE1.CITY
		GROUP BY CATEGORY1
		ORDER BY 2 DESC) AS SALE2
CROSS APPLY (SELECT TOP 3 CATEGORY2,SUM(LINETOTAL) AS TOTAL_SALES
		FROM SALEORDERS
		WHERE CATEGORY1 = SALE2.CATEGORY1
		GROUP BY CATEGORY2
		ORDER BY 2 DESC) AS SALE3
GROUP BY CITY, SALE2.CATEGORY1, SALE3.CATEGORY2	
ORDER BY SALE1.CITY, SALE2.CATEGORY1, SALE3.CATEGORY2,TOTAL_SALES DESC


-- USING RELATIONAL TABLES

SELECT *
FROM CITIES AS C
JOIN ADDRESS AS ADR ON C.ID = ADR.CITYID
JOIN ORDERS AS O ON C.ID = O.ADDRESSID


-- TOTAL SALES OF EACH BRAND PER CATEGORY

SELECT I.BRAND, I.CATEGORY1, SUM(OD.LINETOTAL) AS TOTALPRICE
FROM ITEMS AS I
JOIN ORDERDETAILS AS OD ON I.ID = OD.ITEMID
GROUP BY I.BRAND, I.CATEGORY1
ORDER BY I.BRAND
-- TOTAL SALES OF EACH CATEGORY PER BRAND

SELECT I.CATEGORY1, I.BRAND, SUM(OD.LINETOTAL) AS TOTALPRICE
FROM ITEMS AS I
JOIN ORDERDETAILS AS OD ON I.ID = OD.ITEMID
GROUP BY I.CATEGORY1, I.BRAND 
ORDER BY I.CATEGORY1, SUM(OD.LINETOTAL) DESC

-- FIND  TOTAL AMOUNT OF SALES, MINIMUM PRICE, MAXIMUM PRICE AND AVG PRICE FOR EACH ITEM

-- 1st option joining 3 tables
SELECT I.BRAND, I.CATEGORY1, I.ITEMNAME,
	COUNT(O.ID) AS SALESCOUNT, --   TOTAL AMOUNT ORDER THAT ITEM WAS ORDERED
	SUM(OD.AMOUNT) AS TOTALAMOUNT, -- TOTAL AMOUNT OF ITEM THAT WAS SOLD
	MIN(OD.UNITPRICE) AS MIN_PRICE,
	MAX(OD.UNITPRICE) AS MAX_PRICE,
	AVG(OD.UNITPRICE) AS AVG_PRICE
FROM ITEMS AS I
JOIN ORDERDETAILS AS OD ON I.ID = OD.ITEMID
JOIN ORDERS AS O ON OD.ORDERID = O.ID
GROUP BY I.BRAND, I.CATEGORY1, I.ITEMNAME
ORDER BY I.BRAND, I.ITEMNAME

-- 2nd option joining 2 tables
SELECT I.BRAND, I.CATEGORY1, I.ITEMNAME,
	COUNT(OD.ID) AS SALESCOUNT, --   TOTAL AMOUNT ORDER THAT ITEM WAS ORDERED
	SUM(OD.AMOUNT) AS TOTALAMOUNT, -- TOTAL AMOUNT OF ITEM THAT WAS SOLD
	MIN(OD.UNITPRICE) AS MIN_PRICE,
	MAX(OD.UNITPRICE) AS MAX_PRICE,
	AVG(OD.UNITPRICE) AS AVG_PRICE
FROM ITEMS AS I
JOIN ORDERDETAILS AS OD ON I.ID = OD.ITEMID
GROUP BY I.BRAND, I.CATEGORY1, I.ITEMNAME
ORDER BY I.BRAND, I.ITEMNAME

--  QUESTION BRING AMOUNT OF ADDRESS THAT IS REGISTERED AND THE LATES ADRESS WHERE ORDER WAS SENT TO 

SELECT TMP.NAMESURNAME, TMP.ADDRESS_COUNT, C.CITY, T.TOWN, D.DISTRICT, A.POSTALCODE, A.ADDRESSTEXT FROM
(
SELECT U.ID, U.NAMESURNAME,
(SELECT COUNT(*) FROM ADDRESS WHERE USERID = U.ID) AS ADDRESS_COUNT,
(SELECT TOP 1 ADDRESSID FROM ORDERS WHERE USERID = U.ID ORDER BY DATE_ DESC) AS LASTADDRESSID
FROM USERS AS U
) AS TMP
JOIN ADDRESS AS A ON A.ID = TMP.LASTADDRESSID
JOIN CITIES AS C ON C.ID = A.CITYID
JOIN TOWNS AS T ON T.ID = A.TOWNID
JOIN DISTRICTS AS D ON D.ID = A.DISTRICTID

-- Find the cities where total amount of orders were less than 500 in first 10 days of January

SELECT * FROM
(
SELECT 
	C.CITY, 
	CONVERT(DATE,O.DATE_) AS DATE_, 
	SUM(O.TOTALPRICE) 
FROM ORDERS AS O
	JOIN ADDRESS AS A 
		ON A.ID = O.ADDRESSID
	JOIN CITIES AS C 
		ON C.ID = A.CITYID
WHERE O.DATE_ BETWEEN '20190101' AND '2019-01-31 23:59:59'
GROUP BY C.CITY, CONVERT(DATE,O.DATE_)
HAVING SUM(O.TOTALPRICE) <= 500
) AS TM





